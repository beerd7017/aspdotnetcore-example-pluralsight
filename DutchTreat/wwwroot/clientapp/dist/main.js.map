{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,uFAAuF,OAAO,qL;;;;;;;;;;;;;;;;;;;;;ACApD;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACE;AACI;AACY;AACR;AAgBnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,uEAAW;aACd;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,wDAAU;aACb;YACC,SAAS,EAAE;gBACP,+DAAW;aAChB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBsB;AACG;AAI/C;IAEI,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAIvB,aAAQ,GAAG,EAAE,CAAC;IAFrB,CAAC;IAIM,kCAAY,GAAnB;QAAA,iBAIC;QAHG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;aAChC,GAAG,CAAC,UAAC,MAAgB,IAAK,YAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,EAAE,EAA7B,CAA6B,CAAC,CAAC;IAElE,CAAC;IAZQ,WAAW;QADvB,gEAAU,EAAE;yCAGiB,kDAAI;OAFrB,WAAW,CAavB;IAAD,kBAAC;CAAA;AAbuB;;;;;;;;;;;;ACLxB,gGAAgG,WAAW,IAAI,mCAAmC,6B;;;;;;;;;;;;;;;;;;;;;;;;;ACA/F;AACC;AAOpD;IAGI,qBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAGC;QAFG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;aACnB,SAAS,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAlC,CAAkC,CAAC,CAAC;IAC7D,CAAC;IAVQ,WAAW;QALvB,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;YAExB,SAAS,EAAE,EAAE;SAChB,CAAC;yCAI4B,+DAAW;OAH5B,WAAW,CAWvB;IAAD,kBAAC;CAAA;AAXuB;;;;;;;;;;;;;;ACRxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{title}}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"card bg-light p-2\\\"><h3>Cart</h3></div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { DataService } from './shared/dataService';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductList\n  ],\n  imports: [\n      BrowserModule,\n      HttpModule\n  ],\n    providers: [\n        DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n\r\n    public products = [];\r\n\r\n    public loadProducts() {\r\n        return this.http.get(\"/api/products\")\r\n            .map((result: Response) => this.products = result.json());\r\n            \r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let p of products\\\">{{ p.title }}: {{ p.price | currency:\\\"USD\\\":true }}</li>\\r\\n    </ul>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class ProductList implements OnInit {\r\n    public products;\r\n\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data.loadProducts()\r\n            .subscribe(() => this.products = this.data.products);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}